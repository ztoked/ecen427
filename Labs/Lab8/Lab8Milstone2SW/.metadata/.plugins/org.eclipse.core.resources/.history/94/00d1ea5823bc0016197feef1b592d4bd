#include <stdio.h>
#include <stdint.h>
#include "dma.h"
#include "platform.h"
#include "xparameters.h"
#include "dmaDriver.h"
void print(char *str);

static char readData[] = "abc";
static char writeData[] = "bla";
static uint8_t interrupted = 0;


void dma_interrupt_handler() {
	xil_printf("Done\r\n");
}

void interrupt_handler_dispatcher(void* ptr) {
	ticks++;
	int intc_status = XIntc_GetIntrStatus(XPAR_INTC_0_BASEADDR);

	// Check the DMA interrupt
	if (intc_status & XPAR_DMA_0_IP2BUS_INTERRUPT_MASK) {
		XIntc_AckIntr(XPAR_INTC_0_BASEADDR, XPAR_DMA_0_IP2BUS_INTERRUPT_MASK);
		dma_interrupt_handler();
	}

}


int main()
{
	uint32_t source_word = 0xDEADBEEF;
	uint32_t destination_word = 0x0;

    init_platform();

    print("Hello World\n\r");
    cleanup_platform();
    printf("Printing value before DMA transfer.\n\r");
    xil_printf("%x\r\n", writeData);

    DMA_MasterRecvWord(XPAR_DMA_0_BASEADDR, (Xuint32) &source_word);
    DMA_MasterSendWord(XPAR_DMA_0_BASEADDR, (Xuint32) &destination_word);


    while(!interrupted);
    printf("Printing value after DMA transfer.\n\r");
    xil_printf("%x\r\n", destination_word);

//    cleanup_platform();

    return 0;
}
